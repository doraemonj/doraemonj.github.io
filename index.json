[{"categories":["prepare"],"content":"According to current Covid-19 controlling situation in our country, my wife and daughter both have a great mind to go abroad. Learning English and get ideal IELTS scores are a possible and realistic way to achieve this goal. The first obstable seemed to recite sentences by heart. Unfortunately, it’s not. When I scratched dozens of sentences from YouTube in an English and Chinese spaced format, I found my little princess can not read the first sentence in a while through my help. ","date":"2022-05-14","objectID":"/dairy_004/:0:0","tags":["prepare","Python"],"title":"Order sentences from short to long","uri":"/dairy_004/"},{"categories":["prepare"],"content":"Background Fig 1: Original file: Not ordered The first sentence seemed a bit long for a ten-year-old Chinese girl. So I use Python to find the shortest sentence out, and put them to the upmost position. ","date":"2022-05-14","objectID":"/dairy_004/:0:1","tags":["prepare","Python"],"title":"Order sentences from short to long","uri":"/dairy_004/"},{"categories":["prepare"],"content":"Code # Mission: Filter the sentences with the fewest words to the upmost # Task 1: Input -- Read the md file by lines. \".md\" format is a same way of \".txt\". path = r\"/Users/tangqiang/private/\" # set path file_name = \"IELTS900.md\" # set file name with open(path+file_name) as f: # open IELTS900.md file txt = f.readlines() # read this file and put the whole content to a list variable named \"txt\" # Task 2: Process -- dry = [] # set an empty list variable to filter the blank lines for el in txt: # iterate all elments in txt if len(el.strip()) == 0: # blank lines, like space, enter,etc... need not to be recorded pass else: # record ordinary words to \"dry\" list dry.append(el.strip()) # strip() function used to delete the blank string before and after the word. # The function part should be put in front of the code, we put here to make it more apprehensible def is_contains_chinese(strs): \"\"\" check all the characters in the string, if any one belongs to Chinese, return True. \"\"\" for _char in strs: if '\\u4e00' \u003c= _char \u003c= '\\u9fa5': # return True return False # The function part should be put in front of the code # Split English and Chinese into two parts res_en = [] # set English sentence result list res_cn = [] # set Chinese sentence result list for i, el in enumerate(dry): if not is_contains_chinese(el): # if not contains Chinese res_en.append(el.strip()) else: res_cn.append(el.strip()) dic = dict(zip(res_en, res_cn)) # put two lists into one dictionary, then specific sentence can be found easily. new_en = sorted(res_en, key=len) # sort the english sentence by length # Task 3: Output -- write the new ordered sentences to a new file for el in new_en: with open(path + \"ordered_\" + file_name, \"a\") as f: # open a new file with \"a\" mode which means open then append new strings at the end of the file f.write(f\"{el}\\n\") # English sentence from short to long f.write(f\"{dic[el]}\\n\\n\") # Chinese sentence corresponds to English ones ","date":"2022-05-14","objectID":"/dairy_004/:0:2","tags":["prepare","Python"],"title":"Order sentences from short to long","uri":"/dairy_004/"},{"categories":["prepare"],"content":"Effect At last, we got what we need: Fig 2: Ordered file from short to long ","date":"2022-05-14","objectID":"/dairy_004/:0:3","tags":["prepare","Python"],"title":"Order sentences from short to long","uri":"/dairy_004/"},{"categories":["Git"],"content":"一、Delete a file To remove a file from Git version control while keeping the local file. Add the file to .gitignore. Execute in command line: ​ ​ git rm file_path --cached ​ 进行commit，将文件从版本库中删掉： ​ ​ git commit -m \"delete the file\" ​ ","date":"2022-03-13","objectID":"/git_rm/:0:1","tags":["Git","Git delete"],"title":"How to Delete a Git File or Folder While Keeping the Local Ones","uri":"/git_rm/"},{"categories":["Git"],"content":"二、Delete a folder To remove a folder from Git version control while retaining the local folder, add the -r argument: ​ git rm -r folder_path --cached To remove all files in .gitignore from version control, you need to remove all files first, and then do the following to add all files. ​ git rm -r . --cached ​ git add . This way, files in gitignore will be ignored. ","date":"2022-03-13","objectID":"/git_rm/:0:2","tags":["Git","Git delete"],"title":"How to Delete a Git File or Folder While Keeping the Local Ones","uri":"/git_rm/"},{"categories":null,"content":"Gone with the Wind Live Immigration Show Hi, I’m Chris. there is a library full of books waiting for you. Translating books in an hour artificially, and reading books aloud automatically at any time. Contact us： Mixin: 29273 MIxin Bot: 7000104144 Email: chrishowardaka@gmail.com ","date":"2022-03-07","objectID":"/about/:0:0","tags":null,"title":"About me","uri":"/about/"}]